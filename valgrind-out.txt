==18993== Memcheck, a memory error detector
==18993== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18993== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==18993== Command: ./build/src/test_bargain
==18993== Parent PID: 21900
==18993== 
--18993-- 
--18993-- Valgrind options:
--18993--    --leak-check=full
--18993--    --show-leak-kinds=all
--18993--    --track-origins=yes
--18993--    --verbose
--18993--    --log-file=valgrind-out.txt
--18993-- Contents of /proc/version:
--18993--   Linux version 5.10.102.1-microsoft-standard-WSL2 (oe-user@oe-host) (x86_64-msft-linux-gcc (GCC) 9.3.0, GNU ld (GNU Binutils) 2.34.0.20200220) #1 SMP Wed Mar 2 00:30:59 UTC 2022
--18993-- 
--18993-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--18993-- Page sizes: currently 4096, max supported 4096
--18993-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--18993-- Reading syms from /home/hauptmann/aau/semester1/p1/p1-bargain/build/src/test_bargain
--18993-- Reading syms from /lib/x86_64-linux-gnu/ld-2.31.so
--18993--   Considering /usr/lib/debug/.build-id/e2/5570740d590e5cb7b1a20d86332a8d1bb3b65f.debug ..
--18993--   .. build-id is valid
--18993-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--18993--   Considering /usr/lib/debug/.build-id/54/299c4aec0e5e5f3d7b8135341351d0e1dbfc64.debug ..
--18993--   .. build-id is valid
--18993--    object doesn't have a dynamic symbol table
--18993-- Scheduler: using generic scheduler lock implementation.
--18993-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==18993== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-18993-by-hauptmann-on-???
==18993== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-18993-by-hauptmann-on-???
==18993== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-18993-by-hauptmann-on-???
==18993== 
==18993== TO CONTROL THIS PROCESS USING vgdb (which you probably
==18993== don't want to do, unless you know exactly what you're doing,
==18993== or are doing some strange experiment):
==18993==   /usr/bin/vgdb --pid=18993 ...command...
==18993== 
==18993== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==18993==   /path/to/gdb ./build/src/test_bargain
==18993== and then give GDB the following command
==18993==   target remote | /usr/bin/vgdb --pid=18993
==18993== --pid is optional if only one valgrind process is running
==18993== 
--18993-- REDIR: 0x401fa70 (ld-linux-x86-64.so.2:strlen) redirected to 0x580ca5f2 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--18993-- REDIR: 0x401f850 (ld-linux-x86-64.so.2:index) redirected to 0x580ca60c (vgPlain_amd64_linux_REDIR_FOR_index)
--18993-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--18993--   Considering /usr/lib/debug/.build-id/f2/7641e081d3c37b410d7f31da4e2bf21040f356.debug ..
--18993--   .. build-id is valid
--18993-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--18993--   Considering /usr/lib/debug/.build-id/25/7cdcdf80e04f91ca9e3b185ee3b52995e89946.debug ..
--18993--   .. build-id is valid
==18993== WARNING: new redirection conflicts with existing -- ignoring it
--18993--     old: 0x0401fa70 (strlen              ) R-> (0000.0) 0x580ca5f2 vgPlain_amd64_linux_REDIR_FOR_strlen
--18993--     new: 0x0401fa70 (strlen              ) R-> (2007.0) 0x0483bda0 strlen
--18993-- REDIR: 0x401c290 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483cc90 (strcmp)
--18993-- REDIR: 0x401ffb0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4840740 (mempcpy)
--18993-- Reading syms from /lib/x86_64-linux-gnu/libm-2.31.so
--18993--   Considering /usr/lib/debug/.build-id/1d/6ff6c4c69f3572486bc27b8290ee932b0b9f39.debug ..
--18993--   .. build-id is valid
--18993-- Reading syms from /lib/x86_64-linux-gnu/libc-2.31.so
--18993--   Considering /usr/lib/debug/.build-id/b5/03275bf9fee51581fdceef97533b194035b4f7.debug ..
--18993--   .. build-id is valid
--18993-- REDIR: 0x4a28120 (libc.so.6:memmove) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a27420 (libc.so.6:strncpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a285f0 (libc.so.6:strcasecmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a26b70 (libc.so.6:strcat) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a274b0 (libc.so.6:rindex) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a299f0 (libc.so.6:rawmemchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a41d40 (libc.so.6:wmemchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a41810 (libc.so.6:wcscmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28360 (libc.so.6:mempcpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28090 (libc.so.6:bcmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a27370 (libc.so.6:strncmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a26c90 (libc.so.6:strcmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28250 (libc.so.6:memset) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a417a0 (libc.so.6:wcschr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a27270 (libc.so.6:strnlen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a26de0 (libc.so.6:strcspn) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28640 (libc.so.6:strncasecmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a26d50 (libc.so.6:strcpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28790 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a42fb0 (libc.so.6:wcsnlen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a41880 (libc.so.6:wcscpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a27520 (libc.so.6:strpbrk) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a26c00 (libc.so.6:index) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a27200 (libc.so.6:strlen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a2ddb0 (libc.so.6:memrchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28690 (libc.so.6:strcasecmp_l) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28020 (libc.so.6:memchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a41920 (libc.so.6:wcslen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a277c0 (libc.so.6:strspn) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a28560 (libc.so.6:stpncpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a284d0 (libc.so.6:stpcpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a29a60 (libc.so.6:strchrnul) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a286e0 (libc.so.6:strncasecmp_l) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4afa130 (libc.so.6:__strrchr_avx2) redirected to 0x483b7b0 (rindex)
--18993-- REDIR: 0x4a230f0 (libc.so.6:malloc) redirected to 0x4838710 (malloc)
--18993-- REDIR: 0x4afd290 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x483f760 (memmove)
--18993-- REDIR: 0x4afd720 (libc.so.6:__memset_avx2_unaligned_erms) redirected to 0x483f650 (memset)
--18993-- REDIR: 0x4a27f50 (libc.so.6:strstr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--18993-- REDIR: 0x4a404e0 (libc.so.6:__strstr_sse2_unaligned) redirected to 0x4840920 (strstr)
--18993-- REDIR: 0x4afb7d0 (libc.so.6:__strcpy_avx2) redirected to 0x483bdd0 (strcpy)
==18993== Invalid write of size 8
==18993==    at 0x483F7F3: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x4050A6: items_add_item_to_found (src/items.c:116)
==18993==    by 0x404FDA: items_filter_items (src/items.c:103)
==18993==    by 0x404772: stores_populate_store_items (src/stores.c:30)
==18993==    by 0x403D13: bargain_find_bargain (src/bargain.c:63)
==18993==    by 0x403A81: bargain_menu_find_bargain (src/bargain.c:20)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993==  Address 0x4b75708 is 0 bytes after a block of size 456 alloc'd
==18993==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==18993==    by 0x40385C: test_fetch_get_stores (src/test_bargain.c:365)
==18993==    by 0x403D04: bargain_find_bargain (src/bargain.c:61)
==18993==    by 0x403A81: bargain_menu_find_bargain (src/bargain.c:20)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993== 
==18993== Invalid write of size 8
==18993==    at 0x483F7FB: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x4050A6: items_add_item_to_found (src/items.c:116)
==18993==    by 0x404FDA: items_filter_items (src/items.c:103)
==18993==    by 0x404772: stores_populate_store_items (src/stores.c:30)
==18993==    by 0x403D13: bargain_find_bargain (src/bargain.c:63)
==18993==    by 0x403A81: bargain_menu_find_bargain (src/bargain.c:20)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993==  Address 0x4b75710 is 8 bytes after a block of size 456 alloc'd
==18993==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==18993==    by 0x40385C: test_fetch_get_stores (src/test_bargain.c:365)
==18993==    by 0x403D04: bargain_find_bargain (src/bargain.c:61)
==18993==    by 0x403A81: bargain_menu_find_bargain (src/bargain.c:20)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993== 
==18993== Invalid write of size 8
==18993==    at 0x483F803: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x4050A6: items_add_item_to_found (src/items.c:116)
==18993==    by 0x404FDA: items_filter_items (src/items.c:103)
==18993==    by 0x404772: stores_populate_store_items (src/stores.c:30)
==18993==    by 0x403D13: bargain_find_bargain (src/bargain.c:63)
==18993==    by 0x403A81: bargain_menu_find_bargain (src/bargain.c:20)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993==  Address 0x4b75718 is 16 bytes after a block of size 456 alloc'd
==18993==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==18993==    by 0x40385C: test_fetch_get_stores (src/test_bargain.c:365)
==18993==    by 0x403D04: bargain_find_bargain (src/bargain.c:61)
==18993==    by 0x403A81: bargain_menu_find_bargain (src/bargain.c:20)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993== 
==18993== Invalid write of size 8
==18993==    at 0x483F80B: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x4050A6: items_add_item_to_found (src/items.c:116)
==18993==    by 0x404FDA: items_filter_items (src/items.c:103)
==18993==    by 0x404772: stores_populate_store_items (src/stores.c:30)
==18993==    by 0x403D13: bargain_find_bargain (src/bargain.c:63)
==18993==    by 0x403A81: bargain_menu_find_bargain (src/bargain.c:20)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993==  Address 0x4b75720 is 16 bytes after a block of size 464 in arena "client"
==18993== 
--18993-- REDIR: 0x4a23720 (libc.so.6:free) redirected to 0x4839940 (free)
--18993-- REDIR: 0x4afa300 (libc.so.6:__strlen_avx2) redirected to 0x483bc80 (strlen)
--18993-- REDIR: 0x4af9f40 (libc.so.6:__strchrnul_avx2) redirected to 0x48402b0 (strchrnul)
--18993-- REDIR: 0x4afd270 (libc.so.6:__mempcpy_avx_unaligned_erms) redirected to 0x48403c0 (mempcpy)
==18993== Invalid write of size 8
==18993==    at 0x483F7F3: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x402A06: get_expected_stores (src/test_bargain.c:212)
==18993==    by 0x4033F3: test_stores (src/test_bargain.c:300)
==18993==    by 0x403504: test_bargain_make_assertions (src/test_bargain.c:313)
==18993==    by 0x403C44: bargain_menu_find_bargain (src/bargain.c:43)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993==  Address 0x4b77bd8 is 0 bytes after a block of size 456 alloc'd
==18993==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==18993==    by 0x402899: get_expected_stores (src/test_bargain.c:165)
==18993==    by 0x4033F3: test_stores (src/test_bargain.c:300)
==18993==    by 0x403504: test_bargain_make_assertions (src/test_bargain.c:313)
==18993==    by 0x403C44: bargain_menu_find_bargain (src/bargain.c:43)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993== 
==18993== Invalid write of size 8
==18993==    at 0x483F7FB: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x402A06: get_expected_stores (src/test_bargain.c:212)
==18993==    by 0x4033F3: test_stores (src/test_bargain.c:300)
==18993==    by 0x403504: test_bargain_make_assertions (src/test_bargain.c:313)
==18993==    by 0x403C44: bargain_menu_find_bargain (src/bargain.c:43)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993==  Address 0x4b77be0 is 8 bytes after a block of size 456 alloc'd
==18993==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==18993==    by 0x402899: get_expected_stores (src/test_bargain.c:165)
==18993==    by 0x4033F3: test_stores (src/test_bargain.c:300)
==18993==    by 0x403504: test_bargain_make_assertions (src/test_bargain.c:313)
==18993==    by 0x403C44: bargain_menu_find_bargain (src/bargain.c:43)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993== 
==18993== Invalid write of size 8
==18993==    at 0x483F803: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x402A06: get_expected_stores (src/test_bargain.c:212)
==18993==    by 0x4033F3: test_stores (src/test_bargain.c:300)
==18993==    by 0x403504: test_bargain_make_assertions (src/test_bargain.c:313)
==18993==    by 0x403C44: bargain_menu_find_bargain (src/bargain.c:43)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993==  Address 0x4b77be8 is 16 bytes after a block of size 456 alloc'd
==18993==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==18993==    by 0x402899: get_expected_stores (src/test_bargain.c:165)
==18993==    by 0x4033F3: test_stores (src/test_bargain.c:300)
==18993==    by 0x403504: test_bargain_make_assertions (src/test_bargain.c:313)
==18993==    by 0x403C44: bargain_menu_find_bargain (src/bargain.c:43)
==18993==    by 0x402285: main (src/test_bargain.c:41)
==18993== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 528, hi = 0.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==18993==    at 0x58047B6A: show_sched_status_wrk (m_libcassert.c:406)
==18993==    by 0x58047C87: report_and_quit (m_libcassert.c:477)
==18993==    by 0x58047E17: vgPlain_assert_fail (m_libcassert.c:543)
==18993==    by 0x580522E4: get_bszB_as_is (m_mallocfree.c:303)
==18993==    by 0x580522E4: is_inuse_block (m_mallocfree.c:331)
==18993==    by 0x580522E4: vgPlain_describe_arena_addr (m_mallocfree.c:1592)
==18993==    by 0x5803ECEA: vgPlain_describe_addr (m_addrinfo.c:185)
==18993==    by 0x5803DB3F: vgMemCheck_update_Error_extra (mc_errors.c:1185)
==18993==    by 0x58042BF4: vgPlain_maybe_record_error (m_errormgr.c:822)
==18993==    by 0x5803CFA8: vgMemCheck_record_address_error (mc_errors.c:765)
==18993==    by 0x100A130E63: ???
==18993==    by 0x1008E8DF2F: ???
==18993==    by 0x1008E8DF17: ???
==18993==    by 0x1008E8DF2F: ???
==18993==    by 0x1008E8DF3F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 18993)
==18993==    at 0x483F80B: memmove (vg_replace_strmem.c:1270)
==18993==    by 0x402A06: get_expected_stores (src/test_bargain.c:212)
==18993==    by 0x4033F3: test_stores (src/test_bargain.c:300)
==18993==    by 0x403504: test_bargain_make_assertions (src/test_bargain.c:313)
==18993==    by 0x403C44: bargain_menu_find_bargain (src/bargain.c:43)
==18993==    by 0x402285: main (src/test_bargain.c:41)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFEFFF178
valgrind stack range: [0x1008D8E000 0x1008E8DFFF] top usage: 18472 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

